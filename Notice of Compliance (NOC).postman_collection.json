{
	"info": {
		"_postman_id": "d21582bd-bcac-48e5-9685-d88f2dfdce30",
		"name": "Notice of Compliance (NOC)",
		"description": "A Notice of Compliance (NOC) is issued to a manufacturer following the satisfactory review of a submission for a new drug, and signifies compliance with the Food and Drug Regulations.\n\nThe database is updated nightly and contains NOC information on human drugs from January 1, 1994 to date. It also contains NOC information on Veterinary drugs from September 19, 2000 to date. Through a phased in approach Health Canada will populate the remaining NOCs for Veterinary drugs from January 1, 1994 to September 18, 2000.\n\n\nContact Support:\n Email: open-ouvert@tbs-sct.gc.ca",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/drugproduct all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "452e65f5-4852-475c-94ad-476163e6af31",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_br_brand_id\",\r",
							"            \"noc_br_brandname\",\r",
							"            \"noc_br_din\",\r",
							"            \"noc_br_product_id\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_br_brand_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_brand_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_br_brandname\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_brandname\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_br_din\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_din\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_br_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e7edede6-b0fc-4937-a9da-184317a9e652",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all drug products, or if an ID is provided, the list of all drug products that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"ut Lorem exer\",\n  \"noc_br_brand_id\": \"mollit sint laborum veniam\",\n  \"noc_br_brandname\": \"eu sint voluptate cupidatat\",\n  \"noc_br_product_id\": \"dolor pariatur irure adipisicing est\",\n  \"noc_br_din\": \"laborum qui elit sint esse\"\n },\n {\n  \"noc_number\": \"consequat aliquip\",\n  \"noc_br_brand_id\": \"dolor velit magna\",\n  \"noc_br_brandname\": \"cillum\",\n  \"noc_br_product_id\": \"id ea Lorem\",\n  \"noc_br_din\": \"labore a\"\n }\n]"
				}
			]
		},
		{
			"name": "/drugproduct with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bfb1b572-0edf-4996-839c-1e90395f5477",
						"exec": [
							"var getValueFromQuery = function (key)\r",
							"        {\r",
							"            return getParamFromQuery(key).value;  \r",
							"        };\r",
							"var getParamFromQuery = function (key)\r",
							"        {\r",
							"            var x = pm.request.url.query;\r",
							"\r",
							"            var newArr = x.filter(function(item){\r",
							"                return item != null && item.key == key;\r",
							"            });\r",
							"\r",
							"            return newArr[0];\r",
							"        };\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_br_brand_id\",\r",
							"            \"noc_br_brandname\",\r",
							"            \"noc_br_din\",\r",
							"            \"noc_br_product_id\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_br_brand_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_brand_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_br_brandname\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_brandname\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_br_din\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_din\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_br_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_br_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Validate values\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   var id = parseInt(getValueFromQuery(\"id\"));\r",
							"   if(id === 16761){\r",
							"   var drug1 = jsonData.find\r",
							"      (m => m.noc_br_din === \"02313553\");   \r",
							"   \r",
							"   //console.log(id);\r",
							"   pm.expect(drug1.noc_br_brandname).to.eql(\"ACT ESCITALOPRAM\");   \r",
							"   pm.expect(drug1.noc_number).to.eql(id);\r",
							"   var drug2 = jsonData.find\r",
							"      (m => m.noc_br_din === \"02313561\");\r",
							"   pm.expect(drug2.noc_br_brandname).to.eql(\"ACT ESCITALOPRAM\");   \r",
							"   pm.expect(drug2.noc_number).to.eql(id);\r",
							"   var drug3 = jsonData.find\r",
							"      (m => m.noc_br_din === \"02313588\");\r",
							"   pm.expect(drug3.noc_br_brandname).to.eql(\"ACT ESCITALOPRAM\");   \r",
							"   pm.expect(drug3.noc_number).to.eql(id);\r",
							"   }\r",
							"});\r",
							"\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "2e4b65c5-5e7c-4684-8ca0-76cd9344e832",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"drugproduct\");\r",
							"pm.variables.set(\"id\",16761);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all drug products."
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all drug products, or if an ID is provided, the list of all drug products that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"ut Lorem exer\",\n  \"noc_br_brand_id\": \"mollit sint laborum veniam\",\n  \"noc_br_brandname\": \"eu sint voluptate cupidatat\",\n  \"noc_br_product_id\": \"dolor pariatur irure adipisicing est\",\n  \"noc_br_din\": \"laborum qui elit sint esse\"\n },\n {\n  \"noc_number\": \"consequat aliquip\",\n  \"noc_br_brand_id\": \"dolor velit magna\",\n  \"noc_br_brandname\": \"cillum\",\n  \"noc_br_product_id\": \"id ea Lorem\",\n  \"noc_br_din\": \"labore a\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/drugproduct?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"drugproduct"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/noticeofcompliancemain all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "02931567-c0ce-4ed8-bd48-e1bc825d4711",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_date\",\r",
							"            \"noc_manufacturer_name\",\r",
							"            \"noc_status_with_conditions\",\r",
							"            \"noc_on_submission_type\",\r",
							"            \"noc_is_suppliment\",\r",
							"            \"noc_submission_class\",\r",
							"            \"noc_is_admin\",\r",
							"            \"noc_product_type\",\r",
							"            \"noc_crp_product_name\",\r",
							"            \"noc_crp_company_name\",\r",
							"            \"noc_crp_country_name\",\r",
							"            \"noc_active_status\",\r",
							"            \"noc_reason_supplement\",\r",
							"            \"noc_reason_submission\",\r",
							"            \"noc_therapeutic_class\",\r",
							"            \"noc_last_update_date\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_date\": {\r",
							"                \"$id\": \"#/items/properties/noc_date\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_manufacturer_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_manufacturer_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_status_with_conditions\": {\r",
							"                \"$id\": \"#/items/properties/noc_status_with_conditions\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_on_submission_type\": {\r",
							"                \"$id\": \"#/items/properties/noc_on_submission_type\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_is_suppliment\": {\r",
							"                \"$id\": \"#/items/properties/noc_is_suppliment\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_submission_class\": {\r",
							"                \"$id\": \"#/items/properties/noc_submission_class\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_is_admin\": {\r",
							"                \"$id\": \"#/items/properties/noc_is_admin\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_product_type\": {\r",
							"                \"$id\": \"#/items/properties/noc_product_type\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_crp_product_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_crp_product_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_crp_company_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_crp_company_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_crp_country_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_crp_country_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_active_status\": {\r",
							"                \"$id\": \"#/items/properties/noc_active_status\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_reason_supplement\": {\r",
							"                \"$id\": \"#/items/properties/noc_reason_supplement\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_reason_submission\": {\r",
							"                \"$id\": \"#/items/properties/noc_reason_submission\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_therapeutic_class\": {\r",
							"                \"$id\": \"#/items/properties/noc_therapeutic_class\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_last_update_date\": {\r",
							"                \"$id\": \"#/items/properties/noc_last_update_date\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3dcb4e58-f1a4-4731-8895-a6bf9898cb56",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"noticeofcompliancemain\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all compliance notifications"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all compliance notices, or if an ID is provided, the list of all notices of compliance that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"in labore consequat\",\n  \"noc_date\": \"exercitation et minim pariatur\",\n  \"noc_manufacturer_name\": \"aute adipisicing\",\n  \"noc_status_with_conditions\": \"in\",\n  \"noc_on_submission_type\": \"quis irure\",\n  \"noc_is_suppliment\": \"nisi et in fugiat velit\",\n  \"noc_submission_class\": \"minim nostrud aliqui\",\n  \"noc_is_admin\": \"sit consequat minim\",\n  \"noc_product_type\": \"ut cupidatat Lorem\",\n  \"noc_crp_product_name\": \"deserunt Ut ullamco\",\n  \"noc_crp_company_name\": \"cupidatat ullamco ipsum in\",\n  \"noc_crp_country_name\": \"sed\",\n  \"noc_active_status\": \"eiusmod velit aliqua\",\n  \"noc_reason_supplement\": \"nulla tempor minim\",\n  \"noc_reason_submission\": \"culpa sunt esse\",\n  \"noc_therapeutic_class\": \"Lorem aute dolor ad\",\n  \"noc_last_update_date\": \"labor\"\n },\n {\n  \"noc_number\": \"la\",\n  \"noc_date\": \"irure cillum Excepteur in\",\n  \"noc_manufacturer_name\": \"voluptate elit\",\n  \"noc_status_with_conditions\": \"ipsum velit fugiat nisi\",\n  \"noc_on_submission_type\": \"ipsum quis occaecat\",\n  \"noc_is_suppliment\": \"incididunt do\",\n  \"noc_submission_class\": \"nostrud magna\",\n  \"noc_is_admin\": \"commodo aliquip est cillum id\",\n  \"noc_product_type\": \"culp\",\n  \"noc_crp_product_name\": \"proident\",\n  \"noc_crp_company_name\": \"aliqua\",\n  \"noc_crp_country_name\": \"exercitation non ex\",\n  \"noc_active_status\": \"aute ut\",\n  \"noc_reason_supplement\": \"ea esse\",\n  \"noc_reason_submission\": \"enim non pariatur sunt\",\n  \"noc_therapeutic_class\": \"elit deserunt aute ad\",\n  \"noc_last_update_date\": \"Ut officia irure\"\n }\n]"
				}
			]
		},
		{
			"name": "/noticeofcompliancemain with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c3fc8e4-ee1b-4c87-ae47-887c551ab263",
						"exec": [
							"//Reponse status code  test\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//json schema\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"required\": [\r",
							"        \"noc_number\",\r",
							"        \"noc_date\",\r",
							"        \"noc_manufacturer_name\",\r",
							"        \"noc_status_with_conditions\",\r",
							"        \"noc_on_submission_type\",\r",
							"        \"noc_is_suppliment\",\r",
							"        \"noc_submission_class\",\r",
							"        \"noc_is_admin\",\r",
							"        \"noc_product_type\",\r",
							"        \"noc_crp_product_name\",\r",
							"        \"noc_crp_company_name\",\r",
							"        \"noc_crp_country_name\",\r",
							"        \"noc_active_status\",\r",
							"        \"noc_reason_supplement\",\r",
							"        \"noc_reason_submission\",\r",
							"        \"noc_therapeutic_class\",\r",
							"        \"noc_last_update_date\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"noc_number\": {\r",
							"            \"$id\": \"#/properties/noc_number\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"noc_date\": {\r",
							"            \"$id\": \"#/properties/noc_date\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_manufacturer_name\": {\r",
							"            \"$id\": \"#/properties/noc_manufacturer_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_status_with_conditions\": {\r",
							"            \"$id\": \"#/properties/noc_status_with_conditions\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_on_submission_type\": {\r",
							"            \"$id\": \"#/properties/noc_on_submission_type\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_is_suppliment\": {\r",
							"            \"$id\": \"#/properties/noc_is_suppliment\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_submission_class\": {\r",
							"            \"$id\": \"#/properties/noc_submission_class\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_is_admin\": {\r",
							"            \"$id\": \"#/properties/noc_is_admin\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_product_type\": {\r",
							"            \"$id\": \"#/properties/noc_product_type\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_crp_product_name\": {\r",
							"            \"$id\": \"#/properties/noc_crp_product_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_crp_company_name\": {\r",
							"            \"$id\": \"#/properties/noc_crp_company_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_crp_country_name\": {\r",
							"            \"$id\": \"#/properties/noc_crp_country_name\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_active_status\": {\r",
							"            \"$id\": \"#/properties/noc_active_status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_reason_supplement\": {\r",
							"            \"$id\": \"#/properties/noc_reason_supplement\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_reason_submission\": {\r",
							"            \"$id\": \"#/properties/noc_reason_submission\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_therapeutic_class\": {\r",
							"            \"$id\": \"#/properties/noc_therapeutic_class\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"noc_last_update_date\": {\r",
							"            \"$id\": \"#/properties/noc_last_update_date\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							"\r",
							"//json schema validation\r",
							"pm.test('Schema is valid', function() {\r",
							"    if(pm.environment.get(\"type\") === \"json\"){ \r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"    }\r",
							"});\r",
							"\r",
							"//json response value validation\r",
							"pm.test(\"Validate values\", function () {\r",
							"   if(pm.environment.get(\"type\") === \"json\"){ \r",
							"   var jsonData = pm.response.json();      \r",
							"   pm.expect(jsonData.noc_number).to.eql(19378);\r",
							"   pm.expect(jsonData.noc_date).to.eql(\"2017-06-02\");\r",
							"   pm.expect(jsonData.noc_manufacturer_name).to.eql(\"SANDOZ CANADA INCORPORATED\");\r",
							"   pm.expect(jsonData.noc_status_with_conditions).to.eql(\"N\");\r",
							"   pm.expect(jsonData.noc_on_submission_type).to.eql(\"Supplement to an Abbreviated New Drug Submission (SANDS)\");\r",
							"   pm.expect(jsonData.noc_is_suppliment).to.eql(\"Y\");\r",
							"   pm.expect(jsonData.noc_submission_class).to.eql(\"Other\");\r",
							"   pm.expect(jsonData.noc_product_type).to.eql(\"Prescription Pharmaceutical\");\r",
							"   pm.expect(jsonData.noc_is_admin).to.eql(\"N\");\r",
							"   pm.expect(jsonData.noc_crp_product_name).to.eql(\"LEXAPRO\");\r",
							"   pm.expect(jsonData.noc_crp_company_name).to.eql(\"LUNDBECK AUSTRALIA PVT LTD\");\r",
							"   pm.expect(jsonData.noc_crp_country_name).to.eql(\"AUSTRALIA\");\r",
							"   pm.expect(jsonData.noc_active_status).to.eql(\"1\");\r",
							"   pm.expect(jsonData.noc_reason_supplement).to.eql(\"ALTERNATE MANUFACTURING SITES FOR THE DRUG SUBSTANCE\");\r",
							"   pm.expect(jsonData.noc_reason_submission).to.eql(\"\");\r",
							"   pm.expect(jsonData.noc_therapeutic_class).to.eql(\"\");   \r",
							"   //noc_last_update_date should be removed??\r",
							"   //pm.expect(jsonData.noc_last_update_date).to.eql(\"1111-11-11\");   \r",
							"   }\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a9033b93-8086-4c83-a6e6-2ebed20ce7cf",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.variables.set(\"id\", 19378);\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"noticeofcompliancemain\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/noticeofcompliancemain?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"noticeofcompliancemain"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}"
						},
						{
							"key": "type",
							"value": "{{type}}"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all compliance notifications"
			},
			"response": [
				{
					"name": "Returns a list of all compliance notices, or if an ID is provided, the list of all notices of compliance that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"in labore consequat\",\n  \"noc_date\": \"exercitation et minim pariatur\",\n  \"noc_manufacturer_name\": \"aute adipisicing\",\n  \"noc_status_with_conditions\": \"in\",\n  \"noc_on_submission_type\": \"quis irure\",\n  \"noc_is_suppliment\": \"nisi et in fugiat velit\",\n  \"noc_submission_class\": \"minim nostrud aliqui\",\n  \"noc_is_admin\": \"sit consequat minim\",\n  \"noc_product_type\": \"ut cupidatat Lorem\",\n  \"noc_crp_product_name\": \"deserunt Ut ullamco\",\n  \"noc_crp_company_name\": \"cupidatat ullamco ipsum in\",\n  \"noc_crp_country_name\": \"sed\",\n  \"noc_active_status\": \"eiusmod velit aliqua\",\n  \"noc_reason_supplement\": \"nulla tempor minim\",\n  \"noc_reason_submission\": \"culpa sunt esse\",\n  \"noc_therapeutic_class\": \"Lorem aute dolor ad\",\n  \"noc_last_update_date\": \"labor\"\n },\n {\n  \"noc_number\": \"la\",\n  \"noc_date\": \"irure cillum Excepteur in\",\n  \"noc_manufacturer_name\": \"voluptate elit\",\n  \"noc_status_with_conditions\": \"ipsum velit fugiat nisi\",\n  \"noc_on_submission_type\": \"ipsum quis occaecat\",\n  \"noc_is_suppliment\": \"incididunt do\",\n  \"noc_submission_class\": \"nostrud magna\",\n  \"noc_is_admin\": \"commodo aliquip est cillum id\",\n  \"noc_product_type\": \"culp\",\n  \"noc_crp_product_name\": \"proident\",\n  \"noc_crp_company_name\": \"aliqua\",\n  \"noc_crp_country_name\": \"exercitation non ex\",\n  \"noc_active_status\": \"aute ut\",\n  \"noc_reason_supplement\": \"ea esse\",\n  \"noc_reason_submission\": \"enim non pariatur sunt\",\n  \"noc_therapeutic_class\": \"elit deserunt aute ad\",\n  \"noc_last_update_date\": \"Ut officia irure\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/noticeofcompliancemain?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"noticeofcompliancemain"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/dosageform all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ed9622d-db8c-460d-be9a-cd60e80e4f61",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pf_din_product_id\",\r",
							"            \"noc_pf_form_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pf_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pf_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pf_form_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_pf_form_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4342d1be-6ffe-4a94-8771-e2c1265881be",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"dosageform\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all dosage forms"
			},
			"response": [
				{
					"name": "Returns a list of all dosage forms, or if an ID is provided, the list of all dosage forms that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"culpa consectetur elit\",\n  \"noc_pf_din_product_id\": \"enim dolore\",\n  \"noc_pf_form_name\": \"ipsum\"\n },\n {\n  \"noc_number\": \"fugiat\",\n  \"noc_pf_din_product_id\": \"nulla ipsum ea velit\",\n  \"noc_pf_form_name\": \"laborum\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/dosageform with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e54e35c7-d6b8-4cb2-a15e-d9fc82188373",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							" \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pf_din_product_id\",\r",
							"            \"noc_pf_form_name\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pf_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pf_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pf_form_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_pf_form_name\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"Validate values\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   var dosage = jsonData.find\r",
							"      (m => m.noc_pf_din_product_id === 1378);\r",
							"   pm.expect(dosage.noc_pf_form_name).to.eql(\"Tablet\");   \r",
							"   pm.expect(dosage.noc_number).to.eql(pm.variables.get(\"id\"));\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ed12dd57-723f-4236-9ce6-adabd61f1649",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.variables.set(\"path\",\"dosageform\");\r",
							"pm.variables.set(\"id\",706);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with a matching Notice of Compliance number"
						}
					]
				},
				"description": "Returns all dosage forms"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all dosage forms, or if an ID is provided, the list of all dosage forms that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/dosageform?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dosageform"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"culpa consectetur elit\",\n  \"noc_pf_din_product_id\": \"enim dolore\",\n  \"noc_pf_form_name\": \"ipsum\"\n },\n {\n  \"noc_number\": \"fugiat\",\n  \"noc_pf_din_product_id\": \"nulla ipsum ea velit\",\n  \"noc_pf_form_name\": \"laborum\"\n }\n]"
				}
			]
		},
		{
			"name": "/medicinalingredient with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "24dd627d-e8ce-4cbd-b56b-b6c36be6ea16",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pi_din_product_id\",\r",
							"            \"noc_pi_medic_ingr_name\",\r",
							"            \"noc_pi_strength\",\r",
							"            \"noc_pi_unit\",\r",
							"            \"noc_pi_basic_unit\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pi_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pi_medic_ingr_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_medic_ingr_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_pi_strength\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_strength\",\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"noc_pi_unit\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_unit\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_pi_basic_unit\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_basic_unit\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"Validate values\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   var medIngredient = jsonData.find\r",
							"      (m => m.noc_pi_din_product_id === 7556);\r",
							"   pm.expect(medIngredient.noc_pi_medic_ingr_name).to.eql(\"ETHINYL ESTRADIOL\");   \r",
							"   pm.expect(medIngredient.noc_number).to.eql(3990);\r",
							"   \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "88b0835d-6315-4bfd-a343-e4e6e192efac",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"medicinalingredient\");\r",
							"pm.variables.set(\"id\",3990);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with a matching Notice of Compliance number"
						}
					]
				},
				"description": "Returns all medicinal ingredients"
			},
			"response": [
				{
					"name": "Returns a list of all medicinal ingredients, or if an ID is provided, the list of all medicinal ingredients that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"mollit veniam\",\n  \"noc_pi_din_product_id\": \"dolor veniam consequat dolor ullamco\",\n  \"noc_pi_medic_ingr_name\": \"minim magna\",\n  \"noc_pi_strength\": \"est laborum veniam\",\n  \"noc_pi_unit\": \"deserunt labore ex\",\n  \"noc_pi_basic_unit\": \"fugiat labore\"\n },\n {\n  \"noc_number\": \"Lorem in nostrud sed\",\n  \"noc_pi_din_product_id\": \"magna id reprehenderit quis sit\",\n  \"noc_pi_medic_ingr_name\": \"irure exercitation voluptate ea tempor\",\n  \"noc_pi_strength\": \"proident veniam aute ad\",\n  \"noc_pi_unit\": \"tempor sint\",\n  \"noc_pi_basic_unit\": \"velit pariatur elit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/medicinalingredient all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5a731ee-32bb-4470-a4c3-b48c1ffdbf55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"\"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pi_din_product_id\",\r",
							"            \"noc_pi_medic_ingr_name\",\r",
							"            \"noc_pi_strength\",\r",
							"            \"noc_pi_unit\",\r",
							"            \"noc_pi_basic_unit\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pi_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pi_medic_ingr_name\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_medic_ingr_name\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_pi_strength\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_strength\",\r",
							"                \"type\": \"number\"\r",
							"            },\r",
							"            \"noc_pi_unit\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_unit\",\r",
							"                \"type\": \"string\"\r",
							"            },\r",
							"            \"noc_pi_basic_unit\": {\r",
							"                \"$id\": \"#/items/properties/noc_pi_basic_unit\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3f3ebc47-ea08-4c24-a9b4-1ad6e52bb246",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"medicinalingredient\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all medicinal ingredients"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all medicinal ingredients, or if an ID is provided, the list of all medicinal ingredients that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"mollit veniam\",\n  \"noc_pi_din_product_id\": \"dolor veniam consequat dolor ullamco\",\n  \"noc_pi_medic_ingr_name\": \"minim magna\",\n  \"noc_pi_strength\": \"est laborum veniam\",\n  \"noc_pi_unit\": \"deserunt labore ex\",\n  \"noc_pi_basic_unit\": \"fugiat labore\"\n },\n {\n  \"noc_number\": \"Lorem in nostrud sed\",\n  \"noc_pi_din_product_id\": \"magna id reprehenderit quis sit\",\n  \"noc_pi_medic_ingr_name\": \"irure exercitation voluptate ea tempor\",\n  \"noc_pi_strength\": \"proident veniam aute ad\",\n  \"noc_pi_unit\": \"tempor sint\",\n  \"noc_pi_basic_unit\": \"velit pariatur elit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/medicinalingredient?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"medicinalingredient"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/route with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8121f311-7fa8-41e7-abe1-e49b263b5946",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pr_din_product_id\",\r",
							"            \"noc_pr_route\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_route\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_route\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "62acc810-be5c-473b-89f9-9cb61cc2aed5",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"route\");\r",
							"pm.variables.set(\"id\",7322);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}",
							"description": "Limit results to those with a matching Notice of Compliance number"
						}
					]
				},
				"description": "Returns all administration routes"
			},
			"response": [
				{
					"name": "Returns a list of all administration routes, or if an ID is provided, the list of all routes that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"enim tempor\",\n  \"noc_pr_din_product_id\": \"ipsum ut aute magna\",\n  \"noc_pr_route\": \"laboris adipisicing\"\n },\n {\n  \"noc_number\": \"commodo quis pariatur eu in\",\n  \"noc_pr_din_product_id\": \"dolor\",\n  \"noc_pr_route\": \"quis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/route with multiple ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "911b290a-8556-4c05-b174-041faf250708",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pr_din_product_id\",\r",
							"            \"noc_pr_route\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_route\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_route\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"var nocNumbers = pm.variables.get(\"nocNumbers\");\r",
							"\r",
							"if (nocNumbers && nocNumbers.length >0){\r",
							"      //postman.setNextRequest(\"{{baseUrl}}/route?lang=en&type=json&id={{nocNumber}}\");  \r",
							"      postman.setNextRequest(\"/route with id\");\r",
							"}\r",
							"else{\r",
							"    //postman.setNextRequest(null);\r",
							"    postman.setNextRequest();   \r",
							"   pm.variables.unset(\"nocNumbers\")\r",
							"};\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fc84e976-5d4a-429a-af76-f62de59b7204",
						"exec": [
							"var nocNumbers = pm.variables.get(\"nocNumbers\");\r",
							"if(!nocNumbers){\r",
							"    var nocNumbers = [7322, 8168];\r",
							"}\r",
							"var currentNocNumber = nocNumbers.shift();\r",
							"pm.variables.set(\"nocNumber\", currentNocNumber);\r",
							"pm.variables.set(\"nocNumbers\", nocNumbers);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/route?lang=en&type=json&id={{nocNumber}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"route"
					],
					"query": [
						{
							"key": "lang",
							"value": "en",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "json",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{nocNumber}}",
							"description": "Limit results to those with a matching Notice of Compliance number"
						}
					]
				},
				"description": "Returns all administration routes"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all administration routes, or if an ID is provided, the list of all routes that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"enim tempor\",\n  \"noc_pr_din_product_id\": \"ipsum ut aute magna\",\n  \"noc_pr_route\": \"laboris adipisicing\"\n },\n {\n  \"noc_number\": \"commodo quis pariatur eu in\",\n  \"noc_pr_din_product_id\": \"dolor\",\n  \"noc_pr_route\": \"quis\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/route All",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca808773-8cf7-431a-bb32-02fdefe32c65",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = { \r",
							"         \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"noc_pr_din_product_id\",\r",
							"            \"noc_pr_route\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_din_product_id\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_din_product_id\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"noc_pr_route\": {\r",
							"                \"$id\": \"#/items/properties/noc_pr_route\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "42f63790-e515-4216-9977-7c15b4af88b4",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"route\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all administration routes"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all administration routes, or if an ID is provided, the list of all routes that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/route?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"route"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"enim tempor\",\n  \"noc_pr_din_product_id\": \"ipsum ut aute magna\",\n  \"noc_pr_route\": \"laboris adipisicing\"\n },\n {\n  \"noc_number\": \"commodo quis pariatur eu in\",\n  \"noc_pr_din_product_id\": \"dolor\",\n  \"noc_pr_route\": \"quis\"\n }\n]"
				}
			]
		},
		{
			"name": "/vetspecies with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "114ce698-c10b-46ba-8510-51e6b207f78b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"vet_species_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"vet_species_desc\": {\r",
							"                \"$id\": \"#/items/properties/vet_species_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"  \r",
							"   pm.expect(jsonData[0].vet_species_desc).to.eql(\"CATS\"); \r",
							"   pm.expect(jsonData[0].noc_number).to.eql(3354);   \r",
							"   pm.expect(jsonData[1].vet_species_desc).to.eql(\"DOGS\");\r",
							"   pm.expect(jsonData[1].noc_number).to.eql(3354);   \r",
							"   pm.expect(jsonData[2].vet_species_desc).to.eql(\"HORSES\"); \r",
							"   pm.expect(jsonData[2].noc_number).to.eql(3354);\r",
							"   \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "80ee3a56-9af8-4404-8b7e-c11be13f0940",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"vetspecies\");\r",
							"pm.variables.set(\"id\",3354);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}&id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						},
						{
							"key": "id",
							"value": "{{id}}"
						}
					]
				},
				"description": "Returns all veterinary species"
			},
			"response": [
				{
					"name": "Returns a list of all veterinary species, or if an ID is provided, the list of all species that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"ea irure pariatur\",\n  \"vet_species_desc\": \"tempor anim dolor pariatur\"\n },\n {\n  \"noc_number\": \"culpa magna sed ut\",\n  \"vet_species_desc\": \"quis id velit\"\n }\n]"
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "/vetspecies All",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11756e08-694e-4f6f-8491-cb5734377220",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"items\": {\r",
							"        \"required\": [\r",
							"            \"noc_number\",\r",
							"            \"vet_species_desc\"\r",
							"        ],\r",
							"        \"properties\": {\r",
							"            \"noc_number\": {\r",
							"                \"$id\": \"#/items/properties/noc_number\",\r",
							"                \"type\": \"integer\"\r",
							"            },\r",
							"            \"vet_species_desc\": {\r",
							"                \"$id\": \"#/items/properties/vet_species_desc\",\r",
							"                \"type\": \"string\"\r",
							"            }\r",
							"        },\r",
							"        \"$id\": \"#/items\",\r",
							"        \"type\": \"object\"\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"array\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"    };\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"//Testing header\r",
							"pm.test(\"Content-Type header\", () => {\r",
							"  if(pm.globals.get(\"type\") === \"json\"){\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"  }\r",
							"  if(pm.globals.get(\"type\") === \"xml\"){  \r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/xml');\r",
							"  }  \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3f1640bd-320b-4e7f-a8c3-1c491b35c465",
						"exec": [
							"pm.globals.set(\"language\", \"en\");\r",
							"pm.globals.set(\"type\",\"json\");\r",
							"pm.variables.set(\"path\",\"vetspecies\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{API Key}}",
							"type": "string"
						},
						{
							"key": "in",
							"value": "header",
							"type": "string"
						},
						{
							"key": "key",
							"value": "user-key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"description": "(Required) The identifier assigned to your account for accessing the API",
						"key": "user-key",
						"value": "<string>"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{path}}?lang={{language}}&type={{type}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{path}}"
					],
					"query": [
						{
							"key": "lang",
							"value": "{{language}}",
							"description": "Define which language you would like the response to be in"
						},
						{
							"key": "type",
							"value": "{{type}}",
							"description": "Define which media type you would like the content to be in"
						}
					]
				},
				"description": "Returns all veterinary species"
			},
			"response": [
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Untitled Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returns a list of all veterinary species, or if an ID is provided, the list of all species that correspond to the given Notice of Compliance number",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) The identifier assigned to your account for accessing the API",
								"key": "user-key",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vetspecies?lang=en&type=json&id=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vetspecies"
							],
							"query": [
								{
									"key": "lang",
									"value": "en"
								},
								{
									"key": "type",
									"value": "json"
								},
								{
									"key": "id",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"noc_number\": \"ea irure pariatur\",\n  \"vet_species_desc\": \"tempor anim dolor pariatur\"\n },\n {\n  \"noc_number\": \"culpa magna sed ut\",\n  \"vet_species_desc\": \"quis id velit\"\n }\n]"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://noc-hc-sc-apicast-production.api.canada.ca/v1/",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}